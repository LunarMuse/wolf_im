class DropMenuDemo2 extends StatelessWidget {
  const DropMenuDemo2({super.key});

  @override
  Widget build(BuildContext context) {
    Color bgColor = context.isDark ? const Color(0xff303133) : Colors.white;
    return Wrap(
      spacing: 20,
      children: [display1(bgColor), display2(bgColor)],
    );
  }

  void onSelect(MenuMeta menu) {
    $message.success(message: '点击了 [${menu.label}] 个菜单');
  }

  Widget display1(Color bgColor) {
    return TolyDropMenu(
        onSelect: onSelect,
        placement: Placement.bottomStart,
        decorationConfig: DecorationConfig(isBubble: false, backgroundColor: bgColor),
        offsetCalculator: boxOffsetCalculator,
        menuItems: [
          ActionMenu(const MenuMeta(icon: Icons.add, router: '01', label: '1st menu item')),
          ActionMenu(const MenuMeta(icon: Icons.remove, router: '02', label: '2nd menu item')),
          ActionMenu(const MenuMeta(icon: Icons.close, router: '03', label: '3rd menu item')),
          const DividerMenu(),
          ActionMenu(const MenuMeta(icon: Icons.diamond, router: '04', label: '4ur menu item')),
        ],
        childBuilder: (_, ctrl, __) {
          return DebugDisplayButton(
            info: 'Divider Menu',
            onPressed: ctrl.open,
          );
        });
  }

  Widget display2(Color bgColor) {
    return TolyDropMenu(
        onSelect: onSelect,
        menuItems: [
          ActionMenu(const MenuMeta(router: '01', label: '1st menu item')),
          ActionMenu(const MenuMeta(router: '02', label: '2nd menu item')),
          ActionMenu(const MenuMeta(router: '03', label: '3rd menu item'), enable: false),
          const DividerMenu(),
          ActionMenu(const MenuMeta(router: '04', label: '4ur menu item')),
        ],
        childBuilder: (_, ctrl, __) {
          return DebugDisplayButton(
            info: 'Disable Menu',
            onPressed: ctrl.open,
          );
        });
  }
}
